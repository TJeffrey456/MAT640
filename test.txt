## This is a test file for the newly added methods in library.txt and support.txt
read `main.txt`:

## Testing library procedures

n := 12:
p := 3/7: 
K := 10:
print("Generating random graph with n =", n, ", p =", p):
G := RG(n, p):  
print("Here is the graph G:", G):


print("==== Dirac Theorem ===="):
print("DiracThm:", DiracThm(G)):

print("==== Hamiltonian Path (if Dirac holds) ===="):
success, res := isHamiltonian(G):
print("Hamiltonian path result:", success, res):

print("==== Eulerian Circuit ===="):
success, res := isEulerian(G):
print("Eulerian circuit result:", success, res):

print("==== Perfect Matching ===="):
pm := PerfectMatching(G):
print("Perfect matching:", pm):

print("==== Graph Coloring ===="):
colors := ColorGraph(G):
print("Color assignment:", colors[1]):
print("Number of colors used:", colors[2]):

print("==== Chromatic Polynomial ===="):
k := 2:
cp := ChromaticPolynomial(G, k):
print("Chromatic polynomial evaluated at k = 2:", cp):

Gmat := [[ 0, 16, 13, 0, 0, 0 ], [ 0, 0, 10, 12, 0, 0 ],
            [ 0, 4, 0, 0, 14, 0 ],  [ 0, 0, 9, 0, 0, 20 ],
            [ 0, 0, 0, 7, 0, 4 ],   [ 0, 0, 0, 0, 0, 0 ] ]:

#Gweight := RWG(n, p, K):
Gweight := [
    5,
    { {1,2}, {2,3}, {3,4}, {1,4}, {1,5}, {3,5} },
    table([
        {1,2} = 3,
        {2,3} = 4,
        {3,4} = 5,
        {1,4} = 6,
        {1,5} = 2,
        {3,5} = 1
    ])
]:

print("==== Ford-Fulkerson Max Flow ===="):
s := 1: t := 6:
flow := FordFulkerson(Gmat, s, t):
print("Max flow from", s, "to", t, ":", flow):

print("==== Chinese Postman Problem ===="):
res := ChinesePostman(Gweight):
print("Chinee Postman result:", res):
